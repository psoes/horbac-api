package com.uds.horbac.core.service.employees;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.uds.horbac.core.dao.users.UserRepository;
import com.uds.horbac.core.entities.users.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import com.uds.horbac.core.dao.employees.EmployeeRepository;
import com.uds.horbac.core.entities.employees.Employee;

/**
 * Generated by Spring Data Generator on 31/12/2020
 */
@Component
public class EmployeeService {

    @Autowired
    private EmployeeRepository employeeRepository;

    @Autowired
    UserRepository userRepository;

    @Autowired
    PasswordEncoder passwordEncoder;

    public List<Employee> getAll() {
        return employeeRepository.findAll();
    }

    public Employee getEmployee(Long id) {
        return employeeRepository.getOne(id);
    }

    @Autowired
    RoleRepository roleRepository;

    @Autowired
    GroupRepository groupRepository;

    public Employee save(Employee emp) {
        Employee empl = employeeRepository.save(emp);


        Set<Group> groups = new HashSet<>(groupRepository.findAll());

        Set<Role> roles = new HashSet<>(roleRepository.findAll());
        User user = User.builder().employee(empl).username(empl.getFirstName().trim())
                .accountNonExpired(true)
                .accountNonLocked(true)
                .roles(roles)
                .groups(groups)
                .credentialsNonExpired(true)
                .active(true).enabled(true).password(
                        passwordEncoder.encode("password")
                ).email("tsognong.fidele@gmail.com").build();
        userRepository.save(user);
        return empl;
    }

    public void delete(Long id) {
        User us = userRepository.findByEmployeeId(id);
        if (us != null) userRepository.deleteById(us.getId());
        employeeRepository.deleteById(id);
    }

}
