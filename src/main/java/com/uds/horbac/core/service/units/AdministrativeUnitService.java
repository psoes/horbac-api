package com.uds.horbac.core.service.units;

import com.uds.horbac.core.dao.organizations.OrganizationRepository;
import com.uds.horbac.core.dao.units.AdminUnitSimpleRepository;
import com.uds.horbac.core.dao.units.AdministrativeUnitRepository;
import com.uds.horbac.core.entities.organizations.Organization;
import com.uds.horbac.core.entities.units.AdministrativeUnit;
import com.uds.horbac.core.exceptions.ApiException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Generated by Spring Data Generator on 31/12/2020
 */
@Service
public class AdministrativeUnitService {
    private final OrganizationRepository organizationRepository;
    private final AdminUnitSimpleRepository adminUnitSimpleRepository;

    @Autowired
    public AdministrativeUnitService(OrganizationRepository organizationRepository, AdminUnitSimpleRepository adminUnitSimpleRepository,
                                     AdministrativeUnitRepository administrativeUnitRepository) {
        this.organizationRepository = organizationRepository;
        this.adminUnitSimpleRepository = adminUnitSimpleRepository;
    }

    public AdministrativeUnit createUnit(AdministrativeUnit administrativeUnit) {
        Organization org = organizationRepository.findById(administrativeUnit.getOrganization().getId()).get();
        List<AdministrativeUnit> units = adminUnitSimpleRepository.findAllByOrganizationId(org.getId());
        if (org.isPendingApproval() && units != null && !units.isEmpty()) {
            throw new ApiException("Organization not yet approved by the owner. ASk to the owner to approve the organization creation.");
        }

        return adminUnitSimpleRepository.save(administrativeUnit);
    }

}
