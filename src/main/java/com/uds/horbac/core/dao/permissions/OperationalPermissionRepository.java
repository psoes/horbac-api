package com.uds.horbac.core.dao.permissions;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.data.rest.core.annotation.RepositoryRestResource;

import com.uds.horbac.core.entities.permissions.OperationalPermission;

import io.swagger.annotations.Api;

import java.util.List;

/**
 * Generated by Spring Data Generator on 31/12/2020
 */
@Api(tags = "OperationalPermission Entity")
@RepositoryRestResource(path = "operational-permissions", exported = true)
public interface OperationalPermissionRepository extends JpaRepository<OperationalPermission, Long>, JpaSpecificationExecutor<OperationalPermission> {

    @Query(value = "SELECT p " +
            "FROM OperationalPermission p " +
            "         LEFT JOIN Employs h ON p.organization.id = h.organization.id AND p.unit.id = h.operationalUnit.id " +
            "         LEFT JOIN Appoints ap ON p.organization.id = ap.organization.id AND p.unit.id = ap.adminUnit.id " +
            "         INNER JOIN Uses u ON p.organization.id = u.organization.id AND p.vue.id = u.vue.id " +
            "         INNER JOIN Consider c ON p.organization.id = c.organization.id AND p.activity.id = c.activity.id " +
            "WHERE u.resource.id = :resourceId AND c.action.id = :actionId AND (h.employee.id = :employeeId OR ap.employee.id = :employeeId)")
    List<OperationalPermission> findByEmployeeAndActionAnResource(
            @Param("employeeId") Long employeeId,
            @Param("actionId") Long actionId,
            @Param("resourceId") Long resourceId
    );

    OperationalPermission findFirstByActivityIdAndVueIdAndUnitId(Long activityId, Long vueId, Long unitId);
}
